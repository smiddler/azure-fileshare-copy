parameters:
- name: environmentType
  type: string

stages:

- stage: GenerateSASTokens_${{parameters.environmentType}}
  variables:
    - template: ../variables/${{parameters.environmentType}}.parameters.yml
  jobs:
  - job: SourceSASToken
    displayName: 'Generate SAS Token for Source'
    steps:
    - task: AzureCLI@2
      inputs:
        azureSubscription: ${{variables.sourceServiceConnection}}
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          # Generate SAS token for source
          echo "Generating SAS for source..."
          src_sas=$(az storage account generate-sas --permissions r --account-name $(sourceStorageAccount) --services f --resource-types sco --expiry $(date -u -d '1 hour' +%Y-%m-%dT%H:%MZ) -o tsv)
          echo "##vso[task.setvariable variable=srcSasToken;isOutput=true]$src_sas"
      displayName: 'Generate SAS Token for Source'

  - job: DestinationSASToken
    displayName: 'Generate SAS Token for Destination'
    steps:
    - task: AzureCLI@2
      inputs:
        azureSubscription: ${{variables.destinationServiceConnection}}
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          # Generate SAS token for destination
          echo "Generating SAS for destination..."
          dest_sas=$(az storage account generate-sas --permissions w --account-name $(destinationStorageAccount) --services f --resource-types sco --expiry $(date -u -d '1 hour' +%Y-%m-%dT%H:%MZ) -o tsv)
          echo "##vso[task.setvariable variable=destSasToken;isOutput=true]$dest_sas"
        name: destSas
      displayName: 'Generate SAS Token for Destination'

- stage: CopyFiles_${{parameters.environmentType}}
  dependsOn: GenerateSASTokens_${{parameters.environmentType}}
  variables:
  - template: ../variables/${{parameters.environmentType}}.parameters.yml
  - name: srcSasToken
    value: $[ stageDependencies.GenerateSASTokens_${{parameters.environmentType}}.SourceSASToken.outputs['SourceSASToken.srcSasToken'] ]
  - name: destSasToken
    value: $[ dependencies.GenerateSASTokens_${{parameters.environmentType}}.outputs['DestinationSASToken.destSas.destSasToken'] ]
  jobs:
  - job: UseAzCopy
    steps:
    - script: |
        azcopy copy "https://${{variables.sourceStorageAccount}}.file.core.windows.net/${{variables.sourceFileShare}}/site/wwwroot?${{variables.srcSasToken}}" "https://${{variables.destinationStorageAccount}}.file.core.windows.net/${{variables.destinationFileShare}}/site/wwwroot?${{variables.destSasToken}}" --recursive --include-pattern 'workflow.json'
      displayName: 'Copy Files using AzCopy'
